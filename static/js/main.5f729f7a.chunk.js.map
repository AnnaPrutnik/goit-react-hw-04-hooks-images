{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","components/Loader/Loader.js","components/Modal/Modal.js","components/ImageGallery/ImageGallery.js","services/pixabay-api.js","App.js","index.js"],"names":["SearchBar","onSubmit","useState","searchValue","setSearchValue","className","e","preventDefault","type","autoComplete","autoFocus","placeholder","value","onChange","target","ImageGalleryItem","src","alt","dataSource","onClick","BtnLoadMore","Spinner","color","height","width","timeout","modalRoot","document","getElementById","Modal","url","onClose","listenerForCloseWindow","useCallback","code","useEffect","window","addEventListener","removeEventListener","createPortal","currentTarget","defaultProps","ImageGallery","searchResults","setSearchResults","isLoaded","setIsLoaded","showModal","setShowModal","activePictureUrl","setActivePictureUrl","activePictureAlt","setActivePictureAlt","page","useRef","resetQuery","searchPicture","scrollPage","current","intervalId","setTimeout","scrollTo","top","documentElement","scrollHeight","behavior","clearTimeout","a","searchQuery","searchPage","axios","defaults","baseURL","get","then","result","data","hits","res","length","state","console","log","handleClickPicture","source","dataset","toggleModal","map","picture","webformatURL","tags","largeImageURL","id","pictures","App","setState","this","Component","ReactDOM","render","StrictMode"],"mappings":"gYAIe,SAASA,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAClC,EAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAWA,OACE,wBAAQC,UAAU,YAAlB,SACE,uBAAMA,UAAU,aAAaJ,SAXjC,SAAuBK,GACrBA,EAAEC,iBACFN,EAASE,IASP,UACE,wBAAQK,KAAK,SAASH,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACEA,UAAU,mBACVG,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZC,MAAOT,EACPU,SAlBR,SAAuBP,GACrBF,EAAeE,EAAEQ,OAAOF,e,iDCVb,SAASG,EAAT,GAA8D,IAAlCC,EAAiC,EAAjCA,IAAKC,EAA4B,EAA5BA,IAAKC,EAAuB,EAAvBA,WAAYC,EAAW,EAAXA,QAC/D,OACE,oBAAId,UAAU,mBAAd,SACE,qBACEW,IAAKA,EACLC,IAAKA,EACLZ,UAAU,yBACVc,QAASA,EACT,cAAaD,M,MCRN,SAASE,EAAT,GAAmC,IAAZD,EAAW,EAAXA,QACpC,OACE,wBAAQX,KAAK,SAASH,UAAU,SAASc,QAASA,EAAlD,uB,iCCDW,SAASE,IAGtB,OACE,cAAC,IAAD,CACEb,KAAK,YACLc,MAAM,UACNjB,UAAU,SACVkB,OAAQ,IACRC,MAAO,IACPC,QAAS,M,UCTTC,EAAYC,SAASC,eAAe,cAE3B,SAASC,EAAT,GAAuC,IAAtBC,EAAqB,EAArBA,IAAKb,EAAgB,EAAhBA,IAAKc,EAAW,EAAXA,QAClCC,EAAyBC,uBAC7B,SAAA3B,GACiB,WAAXA,EAAE4B,MACJH,MAGJ,CAACA,IAgBH,OAbAI,qBAAU,WAER,OADAC,OAAOC,iBAAiB,UAAWL,GAC5B,WACLI,OAAOE,oBAAoB,UAAWN,MAEvC,CAACA,IAQGO,uBACL,qBAAKlC,UAAU,UAAUc,QAP3B,SAA6Bb,GACvBA,EAAEkC,gBAAkBlC,EAAEQ,QACxBiB,KAKF,SACE,qBAAK1B,UAAU,QAAf,SACE,qBAAKW,IAAKc,EAAKb,IAAKA,QAGxBS,GAUJG,EAAMY,aAAe,CACnBxB,IAAK,6B,qBCrCP,IA+FeyB,EA/FM,SAAC,GAAqB,IAAnBvC,EAAkB,EAAlBA,YACtB,EAA0CD,mBAAS,IAAnD,mBAAOyC,EAAP,KAAsBC,EAAtB,KACA,EAAgC1C,oBAAS,GAAzC,mBAAO2C,EAAP,KAAiBC,EAAjB,KACA,EAAkC5C,oBAAS,GAA3C,mBAAO6C,EAAP,KAAkBC,EAAlB,KACA,EAAgD9C,mBAAS,IAAzD,mBAAO+C,EAAP,KAAyBC,EAAzB,KACA,EAAgDhD,mBAAS,IAAzD,mBAAOiD,EAAP,KAAyBC,EAAzB,KACIC,EAAOC,iBAAO,GAElBnB,qBAAU,WACRoB,IAEAC,IACAC,MACC,CAACtD,IAEJ,IAAMoD,EAAa,WACjBF,EAAKK,QAAU,EACfd,EAAiB,KAGba,EAAa,WACjB,IAAME,EAAaC,YAAW,WAC5BxB,OAAOyB,SAAS,CACdC,IAAKnC,SAASoC,gBAAgBC,aAC9BC,SAAU,WAEZC,aAAaP,KACZ,MAGCH,EAAa,uCAAG,4BAAAW,EAAA,sEAElBrB,GAAY,GAFM,SClCesB,EDqCAjE,ECrCakE,EDqCAhB,EAAKK,QCpCvDY,IAAMC,SAASC,QALA,2BAMRF,IACJG,IADI,aAEGL,EAFH,iBAEuBC,EAFvB,gBALO,qCAKP,6DAJQ,KAQZK,MAAK,SAAAC,GAAM,OAAIA,EAAOC,KAAKC,QD4BR,QAGZC,EAHY,QAIVC,OAAS,IACfnC,GAAiB,SAAAoC,GAAK,4BAAQA,GAAR,YAAkBF,OACxChC,GAAY,IANI,gDASlBA,GAAY,GACZmC,QAAQC,IAAR,MAVkB,kCClCT,IAAwBd,EAAaC,IDkC5B,oBAAH,qDAoBbc,EAAqB,SAAA7E,GACzB,MAGIA,EAAEQ,OAFOsE,EADb,EACEC,QAAWD,OACXnE,EAFF,EAEEA,IAEFiC,EAAoBkC,GACpBhC,EAAoBnC,GACpBqE,KAGIA,EAAc,WAClBtC,GAAcD,IAGhB,OACE,qCACE,oBAAI1C,UAAU,eAAd,SACGsC,EAAcoC,OAAS,GACtBpC,EAAc4C,KAAI,SAAAC,GAAO,OACvB,cAAC,EAAD,CAEExE,IAAKwE,EAAQC,aACbxE,IAAKuE,EAAQE,KACbvE,QAASgE,EACTjE,WAAYsE,EAAQG,eAJfH,EAAQI,SAQpB/C,EACC,cAACxB,EAAD,IAEAsB,EAAcoC,OAAS,GAAK,cAAC3D,EAAD,CAAaD,QArCxB,WACrBkC,EAAKK,SAAW,EAChBF,IACAC,OAoCGV,GACC,cAAC,EAAD,CACEhB,QAASuD,EACTxD,IAAKmB,EACLhC,IAAKkC,EACL0C,SAAUlD,QE7FdmD,E,4MACJd,MAAQ,CACN7E,YAAa,I,EAEfF,SAAW,SAAAW,GACT,EAAKmF,SAAS,CAAE5F,YAAaS,K,4CAE/B,WACE,IAAQX,EAAa+F,KAAb/F,SACAE,EAAgB6F,KAAKhB,MAArB7E,YAER,OACE,sBAAKE,UAAU,MAAf,UACE,cAACL,EAAD,CAAWC,SAAUA,IACJ,KAAhBE,GAAsB,cAAC,EAAD,CAAcA,YAAaA,W,GAdxC8F,aAoBHH,ICpBfI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzE,SAASC,eAAe,W","file":"static/js/main.5f729f7a.chunk.js","sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './Searchbar.css';\n\nexport default function SearchBar({ onSubmit }) {\n  const [searchValue, setSearchValue] = useState('');\n\n  function handlerSubmit(e) {\n    e.preventDefault();\n    onSubmit(searchValue);\n  }\n\n  function handlerChange(e) {\n    setSearchValue(e.target.value);\n  }\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handlerSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={searchValue}\n          onChange={handlerChange}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import './ImageGalleryItem.css';\nimport PropTypes from 'prop-types';\n\nexport default function ImageGalleryItem({ src, alt, dataSource, onClick }) {\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        src={src}\n        alt={alt}\n        className=\"ImageGalleryItem-image\"\n        onClick={onClick}\n        data-source={dataSource}\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  dataSource: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","import './Button.css';\nimport PropTypes from 'prop-types';\n\nexport default function BtnLoadMore({ onClick }) {\n  return (\n    <button type=\"button\" className=\"Button\" onClick={onClick}>\n      Load more\n    </button>\n  );\n}\n\nBtnLoadMore.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from 'react-loader-spinner';\nimport './Loader.css';\n\nexport default function Spinner() {\n  //other logic\n\n  return (\n    <Loader\n      type=\"ThreeDots\"\n      color=\"#3f51b5\"\n      className=\"Loader\"\n      height={100}\n      width={100}\n      timeout={3000} //3 secs\n    />\n  );\n}\n","import { useEffect, useCallback } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport './Modal.css';\n\nconst modalRoot = document.getElementById('modal-root');\n\nexport default function Modal({ url, alt, onClose }) {\n  const listenerForCloseWindow = useCallback(\n    e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    },\n    [onClose],\n  );\n\n  useEffect(() => {\n    window.addEventListener('keydown', listenerForCloseWindow);\n    return () => {\n      window.removeEventListener('keydown', listenerForCloseWindow);\n    };\n  }, [listenerForCloseWindow]);\n\n  function handleBackdropClick(e) {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  }\n\n  return createPortal(\n    <div className=\"Overlay\" onClick={handleBackdropClick}>\n      <div className=\"Modal\">\n        <img src={url} alt={alt} />\n      </div>\n    </div>,\n    modalRoot,\n  );\n}\n\nModal.propTypes = {\n  url: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nModal.defaultProps = {\n  alt: 'Modal for current picture',\n};\n","import { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport './ImageGallery.css';\n\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport BtnLoadMore from '../Button';\nimport Spinner from '../Loader';\nimport Modal from '../Modal';\nimport searchPictures from '../../services/pixabay-api';\n\nconst ImageGallery = ({ searchValue }) => {\n  const [searchResults, setSearchResults] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [activePictureUrl, setActivePictureUrl] = useState('');\n  const [activePictureAlt, setActivePictureAlt] = useState('');\n  let page = useRef(1);\n\n  useEffect(() => {\n    resetQuery();\n\n    searchPicture();\n    scrollPage();\n  }, [searchValue]);\n\n  const resetQuery = () => {\n    page.current = 1;\n    setSearchResults([]);\n  };\n\n  const scrollPage = () => {\n    const intervalId = setTimeout(() => {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n      clearTimeout(intervalId);\n    }, 1000);\n  };\n\n  const searchPicture = async () => {\n    try {\n      setIsLoaded(true);\n      const res = await searchPictures(searchValue, page.current);\n      if (res.length > 0) {\n        setSearchResults(state => [...state, ...res]);\n        setIsLoaded(false);\n      }\n    } catch (error) {\n      setIsLoaded(false);\n      console.log(error);\n    }\n  };\n\n  const handleClickBtn = () => {\n    page.current += 1;\n    searchPicture();\n    scrollPage();\n  };\n\n  const handleClickPicture = e => {\n    const {\n      dataset: { source },\n      alt,\n    } = e.target;\n    setActivePictureUrl(source);\n    setActivePictureAlt(alt);\n    toggleModal();\n  };\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  return (\n    <>\n      <ul className=\"ImageGallery\">\n        {searchResults.length > 0 &&\n          searchResults.map(picture => (\n            <ImageGalleryItem\n              key={picture.id}\n              src={picture.webformatURL}\n              alt={picture.tags}\n              onClick={handleClickPicture}\n              dataSource={picture.largeImageURL}\n            />\n          ))}\n      </ul>\n      {isLoaded ? (\n        <Spinner />\n      ) : (\n        searchResults.length > 0 && <BtnLoadMore onClick={handleClickBtn} />\n      )}\n      {showModal && (\n        <Modal\n          onClose={toggleModal}\n          url={activePictureUrl}\n          alt={activePictureAlt}\n          pictures={searchResults}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ImageGallery;\nImageGallery.propTypes = {\n  searchValue: PropTypes.string.isRequired,\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://pixabay.com/api/';\nconst KEY_API = '23114500-22e254b478d4c1f3e17503cc3';\nconst PER_PAGE = 12;\n\nexport default function searchPictures(searchQuery, searchPage) {\n  axios.defaults.baseURL = BASE_URL;\n  return axios\n    .get(\n      `?q=${searchQuery}&page=${searchPage}&key=${KEY_API}&image_type=photo&orientation=horizontal&per_page=${PER_PAGE}`,\n    )\n    .then(result => result.data.hits);\n}\n","import './App.css';\nimport { Component } from 'react';\nimport SearchBar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\n\nclass App extends Component {\n  state = {\n    searchValue: '',\n  };\n  onSubmit = value => {\n    this.setState({ searchValue: value });\n  };\n  render() {\n    const { onSubmit } = this;\n    const { searchValue } = this.state;\n\n    return (\n      <div className=\"App\">\n        <SearchBar onSubmit={onSubmit} />\n        {searchValue !== '' && <ImageGallery searchValue={searchValue} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}